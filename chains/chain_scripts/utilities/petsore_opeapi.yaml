openapi: 3.0.3
info:
  title: Mini Petstore
  version: "1.0.0"
  description: |
    Esempio minimale di Petstore per demo/integrazione con toolkit OpenAPI.
    Include operazioni di listing, creazione, recupero e cancellazione di un Pet.
servers:
  - url: https://petstore.example.com
    description: Public demo server
tags:
  - name: pets
    description: Operazioni sui pet
paths:
  /pets:
    get:
      tags: [pets]
      operationId: listPets
      summary: Lista tutti i pet
      description: Restituisce una lista paginabile di pet.
      parameters:
        - $ref: "#/components/parameters/limit"
        - in: query
          name: tag
          description: Filtra per tag
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Lista di pet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
              examples:
                example:
                  value:
                    - id: 1
                      name: Fido
                      tag: dog
                    - id: 2
                      name: Micio
                      tag: cat
        default:
          description: Errore imprevisto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags: [pets]
      operationId: createPet
      summary: Crea un nuovo pet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
            examples:
              example:
                value:
                  name: Pluto
                  tag: dog
      responses:
        "201":
          description: Pet creato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              examples:
                example:
                  value:
                    id: 123
                    name: Pluto
                    tag: dog
        default:
          description: Errore imprevisto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pets/{id}:
    get:
      tags: [pets]
      operationId: getPet
      summary: Recupera le informazioni di un pet
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Dettaglio del pet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              examples:
                example:
                  value:
                    id: 1
                    name: Fido
                    tag: dog
        "404":
          description: Pet non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Errore imprevisto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [pets]
      operationId: deletePet
      summary: Elimina un pet esistente
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: Pet eliminato con successo
        "404":
          description: Pet non trovato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Errore imprevisto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /health:
    get:
      operationId: healthCheck
      summary: Verifica lo stato dell'API
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

components:
  parameters:
    limit:
      name: limit
      in: query
      description: Numero massimo di risultati da restituire
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
    id:
      name: id
      in: path
      description: ID del pet
      required: true
      schema:
        type: integer
        format: int64

  schemas:
    Pet:
      type: object
      required: [id, name]
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
      example:
        id: 1
        name: Fido
        tag: dog

    NewPet:
      type: object
      required: [name]
      properties:
        name:
          type: string
        tag:
          type: string
      example:
        name: Pluto
        tag: dog

    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"

    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      example:
        code: 404
        message: "Not Found"
